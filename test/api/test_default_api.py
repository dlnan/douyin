# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
"""

from __future__ import absolute_import

import unittest

from douyin.open.oauth2.api.default_api import DefaultApi
from douyin.open.oauth2.rest import ApiException

from douyin.open.oauth2.model.oauth_access_token_response import OauthAccessTokenResponse
from douyin.open.oauth2.model.oauth_client_token_response import OauthClientTokenResponse
from douyin.open.oauth2.model.oauth_refresh_token_response import OauthRefreshTokenResponse


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self):
        self.api = DefaultApi()

    def tearDown(self):
        pass

    def test_oauth_access_token_get(self):
        """Test case for oauth_access_token_get

        获取access_token
        """
        
        resp = self.api.oauth_access_token_get(client_key='client_key_example', client_secret='client_secret_example', code='code_example', grant_type='grant_type_example', )
        pass

    def test_oauth_client_token_get(self):
        """Test case for oauth_client_token_get

        生成client_token
        """
        
        resp = self.api.oauth_client_token_get(client_key='client_key_example', client_secret='client_secret_example', grant_type='grant_type_example', )
        pass

    def test_oauth_refresh_token_get(self):
        """Test case for oauth_refresh_token_get

        刷新access_token
        """
        
        resp = self.api.oauth_refresh_token_get(client_key='client_key_example', grant_type='grant_type_example', refresh_token='refresh_token_example', )
        pass

    def test_platform_oauth_connect_get(self):
        """Test case for platform_oauth_connect_get

        获取授权码(code)
        """
        
        resp = self.api.platform_oauth_connect_get(client_key='client_key_example', response_type='response_type_example', scope='scope_example', redirect_uri='redirect_uri_example', state='state_example', )
        pass


if __name__ == '__main__':
    unittest.main()
